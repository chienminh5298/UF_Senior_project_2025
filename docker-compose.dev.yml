services:
    ufdatabase:
        image: 'mysql'
        environment:
            MYSQL_ROOT_PASSWORD: moneymachine
            MYSQL_DATABASE: moneymachine
        volumes:
            - ./backupDB:/docker-entrypoint-initdb.d
            - db-volume:/var/lib/mysql
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
            timeout: 5s
            retries: 1
        ports:
            - '3306:3306'
        container_name: ufdatabase
    bottrade:
        build:
            context: ./botTrade
            dockerfile: Dockerfile.dev
        depends_on:
            ufdatabase:
                condition: service_healthy
        ports:
            - '9999:9999'
        env_file: ./botTrade/.env
        volumes:
            - ./botTrade:/app            # Mount local source for hot-reload
            - /app/node_modules          # Prevent overwriting node_modules
            - log-volume:/app/log
            # - ~/.aws:/root/.aws:ro
        container_name: bottrade
    backend:
        build:
            context: ./webServer
            dockerfile: Dockerfile.dev
        depends_on:
            ufdatabase:
                condition: service_healthy
        ports:
            - '3001:3001'
            - '7777:7777'
        env_file: ./webServer/.env
        volumes:
            - ./webServer:/app
            - /app/node_modules          
            # - ./certbot/conf:/etc/letsencrypt #Mount for SSL certs
            # - ~/.aws:/root/.aws:ro
        container_name: backend
        # environment:
        #     - AWS_PROFILE=AdministratorAccess-427078961005
        #     - AWS_SDK_LOAD_CONFIG=1     # bắt SDK đọc ~/.aws/config
        #     - AWS_REGION=ap-southeast-1
    frontend-user:
        build:
            context: ./frontendUser
            dockerfile: Dockerfile.dev
        ports:
            - '3000:3000'
        volumes:
            - ./frontendUser:/app
            - /app/node_modules # avoid overwriting node_modules
    frontend-admin:
        build:
            context: ./frontendAdmin
            dockerfile: Dockerfile.dev
        ports:
            - '3002:3002'
        volumes:
            - ./frontendAdmin:/app
            - /app/node_modules # avoid overwriting node_modules
volumes:
    db-volume:
    log-volume:
